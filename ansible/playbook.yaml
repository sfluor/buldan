- name: Buldan setup
  vars:
    domain: buldan.scobalt.cc
    repo_root: /home/ubuntu/buldan
  hosts: myhosts
  collections:
    - nginxinc.nginx_core
  tasks:
    - name: Ping my hosts
      ansible.builtin.ping:

    - name: Setup the Datadog agent
      become: true
      tags:
        - observability
      vars:
        datadog_config:
          logs_enabled: true
      import_role:
        name: datadog.dd.agent

    - name: Create the datadog agent log conf directory
      become: true
      tags:
        - observability
      ansible.builtin.file:
        path: /etc/datadog-agent/conf.d/buldan.d
        state: directory
        mode: '0755'
        owner: dd-agent
        group: dd-agent

    - name: Create datadog-agent log conf
      become: true
      tags:
        - observability
      copy:
        src: ddlog.conf.yaml
        dest: /etc/datadog-agent/conf.d/buldan.d/conf.yaml
        owner: dd-agent
        group: dd-agent

    - name: Restart the datadog agent
      become: true
      tags:
        - observability
      service:
        name: datadog-agent
        state: restarted

    - name: Checkout repository
      ansible.builtin.git:
        repo: 'https://github.com/sfluor/buldan.git'
        dest: "{{repo_root}}"

    - name: Build the server
      tags:
        - app
      command: >
        {{repo_root}}/scripts/build

    - block:
      - name: Install required packages
        ansible.builtin.package:
          name:
            - git
            - nodejs
            - npm
            - golang-go

      - name: Install NGINX
        ansible.builtin.include_role:
          name: nginx

      - name: Ensure Nginx is running
        service:
          name: nginx
          state: started
          enabled: true

      - name: Install Certbot and the Nginx plugin
        apt:
          name:
            - certbot
            - python3-certbot-nginx
          state: present

      - name: Obtain SSL certificates from Let's Encrypt
        command: >
          certbot --nginx -n --agree-tos --register-unsafely-without-email --redirect
          --domains {{domain}}
        args:
          creates: "{{ '/etc/letsencrypt/live/' + domain + '/fullchain.pem'}}"

      - name: Create a cron job for certificate renewal
        cron:
          name: "Renew Let's Encrypt certificates"
          job: "certbot renew --quiet --renew-hook 'systemctl reload nginx'"
          minute: "0"
          hour: "3"
          user: root
          state: present

      - name: Setup NGINX
        ansible.builtin.include_role:
          name: nginx_config
        vars:
          nginx_config_debug_output: true
          nginx_config_http_template_enable: true
          nginx_config_http_template:
            - template_file: http/default.conf.j2
              deployment_location: /etc/nginx/conf.d/default.conf
              config:
                servers:
                  - core:
                      listen:
                        - port: 80
                      server_name: localhost
                    locations:
                      - location: /
                        proxy:
                          pass: http://127.0.0.1:8080
                          # Required for web sockets handshakes
                          http_version: "1.1"
                          set_header:
                            - field: Host
                              value: $host
                            - field: Upgrade
                              value: $http_upgrade
                            - field: Connection
                              value: "upgrade"
                    log:
                      access:
                        - path: /var/log/nginx/access.log
                          format: main

      - name: Ensure Nginx is still running
        service:
          name: nginx
          state: started
          enabled: true

      - name: Setup systemd for server
        copy:
          src: buldan.service
          dest: /etc/systemd/system
          owner: root
          group: root

      - name: Start buldan
        tags:
          - app
        service:
          name: buldan
          state: restarted
          daemon_reload: true

      become: true

